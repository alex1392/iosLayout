<Application x:Class="iosLayout.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:blur="clr-namespace:BlurryControls.Controls;assembly=BlurryControls"
             xmlns:local="clr-namespace:iosLayout"
             StartupUri="MainWindow.xaml">

  <Application.Resources>
    <ResourceDictionary>
      <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Light.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Primary/MaterialDesignColor.DeepPurple.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MaterialDesignColors;component/Themes/Recommended/Accent/MaterialDesignColor.Lime.xaml" />
      </ResourceDictionary.MergedDictionaries>

      <CornerRadius x:Key="ButtonCornerRadius"
                    BottomLeft="{x:Static local:Constants.ButtonCornerRadius}"
                    BottomRight="{x:Static local:Constants.ButtonCornerRadius}"
                    TopLeft="{x:Static local:Constants.ButtonCornerRadius}"
                    TopRight="{x:Static local:Constants.ButtonCornerRadius}" />
      <CornerRadius x:Key="FolderButtonCornerRadius"
                    BottomLeft="{x:Static local:Constants.FolderButtonCornerRadius}"
                    BottomRight="{x:Static local:Constants.FolderButtonCornerRadius}"
                    TopLeft="{x:Static local:Constants.FolderButtonCornerRadius}"
                    TopRight="{x:Static local:Constants.FolderButtonCornerRadius}" />
      <Thickness x:Key="ButtonMargin"
                 Left="{x:Static local:Constants.ButtonMargin}" />
      <Thickness x:Key="MainButtonMargin"
                 Left="{x:Static local:Constants.ButtonMargin}" />
      <Thickness x:Key="ButtonLabelMargin"
                 Top="{x:Static local:Constants.ButtonLabelMargin}"
                 Bottom="{x:Static local:Constants.ButtonLabelMargin}" />
      <Thickness x:Key="FolderButtonMargin"
                 Top="{x:Static local:Constants.FolderButtonMargin}"
                 Left="{x:Static local:Constants.FolderButtonMargin}" />
      <Thickness x:Key="FolderButtonPopupMargin"
                 Left="{x:Static local:Constants.FolderButtonMargin}" />


      <SolidColorBrush x:Key="Shader"
                       Color="#4C000000" />
      <SolidColorBrush x:Key="BlurryBackground"
                       Color="#4CFFFFFF" />
      <SolidColorBrush x:Key="FolderBackground"
                       Color="#7FFFFFFF" />

      <ControlTemplate x:Key="BlurryFolderTemplate">
        <Grid>
          <Rectangle Name="Blur" />
          <!--BlurryUserControl.Template中一定要有一個名為Blur的元件來搭載模糊背景-->
          <Rectangle RadiusX="{x:Static local:Constants.ButtonCornerRadius}"
                     RadiusY="{x:Static local:Constants.ButtonCornerRadius}" />
        </Grid>
      </ControlTemplate>
      <Style x:Key="BlurryFolder"
             TargetType="blur:BlurryUserControl">
        <Setter Property="Template"
                Value="{StaticResource BlurryFolderTemplate}" />
      </Style>

      <Style x:Key="PageButtonPanel"
             TargetType="ItemsControl">
        <Setter Property="Margin">
          <Setter.Value>
            <Thickness Top="{x:Static local:Constants.ButtonMargin}" />
          </Setter.Value>
        </Setter>
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <WrapPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="MainButtonPanel"
             TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <StackPanel Orientation="Horizontal" />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <Style x:Key="ButtonLabel"
             TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="8" />
        <Setter Property="Margin"
                Value="{StaticResource ButtonLabelMargin}" />
        <Setter Property="MaxWidth"
                Value="{x:Static local:Constants.ButtonWidth}" />
      </Style>
      <Style x:Key="FolderButtonLabel"
             TargetType="TextBlock">
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="TextAlignment"
                Value="Center" />
        <Setter Property="FontFamily"
                Value="Roboto" />
        <Setter Property="Foreground"
                Value="White" />
        <Setter Property="FontSize"
                Value="2" />
        <Setter Property="Margin"
                Value="0.75,0" />
        <Setter Property="MaxWidth"
                Value="{x:Static local:Constants.FolderButtonWidth}" />
      </Style>

      <Style x:Key="ApplicationBase"
             TargetType="Button">
        <Setter Property="Width"
                Value="{x:Static local:Constants.ButtonWidth}" />
        <Setter Property="Height"
                Value="{x:Static local:Constants.ButtonWidth}" />
        <Setter Property="Cursor"
                Value="Hand" />
      </Style>
      <Style x:Key="Application"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource ApplicationBase}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid>
                <Border x:Name="ApplicationMask"
                        Background="Black"
                        Margin="1"
                        CornerRadius="{StaticResource ButtonCornerRadius}">
                </Border>
                <Border x:Name="ApplicationContent">
                  <Border.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=ApplicationMask}" />
                  </Border.OpacityMask>
                  <ContentPresenter />
                </Border>
                <Border Name="ApplicationShader"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        Visibility="Hidden"
                        Panel.ZIndex="1"
                        Background="{StaticResource Shader}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed"
                         Value="true">
                  <Setter TargetName="ApplicationShader"
                          Property="Visibility"
                          Value="Visible" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="PageFolder"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource ApplicationBase}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid>
                <blur:BlurryUserControl Name="blurryBackground"
                                        BlurContainer="{Binding ElementName=BlurContainer}"
                                        Style="{StaticResource BlurryFolder}" />
                <!--<ContentPresenter Width="{x:Static local:Constants.FolderContentWidth}"
                                  Height="{x:Static local:Constants.FolderContentWidth}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />-->
                <Border Name="AppFolderShader"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        Visibility="Hidden"
                        Panel.ZIndex="1"
                        Background="{StaticResource Shader}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed"
                         Value="true">
                  <Setter TargetName="AppFolderShader"
                          Property="Visibility"
                          Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                  <Setter Property="Opacity"
                          Value="0.4" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="MainFolder"
             TargetType="{x:Type Button}"
             BasedOn="{StaticResource ApplicationBase}">
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid>
                <Rectangle RadiusX="{x:Static local:Constants.ButtonCornerRadius}"
                           RadiusY="{x:Static local:Constants.ButtonCornerRadius}"
                           Fill="{StaticResource FolderBackground}" />
                <ContentPresenter Width="{x:Static local:Constants.FolderContentWidth}"
                                  Height="{x:Static local:Constants.FolderContentWidth}"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center" />
                <Border Name="AppFolderShader"
                        CornerRadius="{StaticResource ButtonCornerRadius}"
                        Visibility="Hidden"
                        Panel.ZIndex="1"
                        Background="{StaticResource Shader}" />
              </Grid>
              <ControlTemplate.Triggers>
                <Trigger Property="IsPressed"
                         Value="true">
                  <Setter TargetName="AppFolderShader"
                          Property="Visibility"
                          Value="Visible" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                  <Setter Property="Opacity"
                          Value="0.4" />
                </Trigger>
              </ControlTemplate.Triggers>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="FolderButton"
             TargetType="{x:Type Button}">
        <Setter Property="Width"
                Value="{x:Static local:Constants.FolderButtonWidth}" />
        <Setter Property="Height"
                Value="{x:Static local:Constants.FolderButtonWidth}" />
        <Setter Property="Template">
          <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
              <Grid>
                <Border x:Name="FolderButtonMask"
                        Background="Black"
                        Margin="1"
                        CornerRadius="{StaticResource FolderButtonCornerRadius}" />
                <Border x:Name="FolderButtonContent">
                  <Border.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=FolderButtonMask}" />
                  </Border.OpacityMask>
                  <ContentPresenter />
                </Border>
              </Grid>
            </ControlTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="FolderPanel"
             TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <WrapPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <Button Style="{StaticResource FolderButton}"
                      Margin="{StaticResource FolderButtonMargin}"
                      IsHitTestVisible="False">
                <Image Source="{Binding Image}" />
              </Button>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>
      <Style x:Key="FolderPanelPopup"
             TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
          <Setter.Value>
            <ItemsPanelTemplate>
              <WrapPanel />
            </ItemsPanelTemplate>
          </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
          <Setter.Value>
            <DataTemplate>
              <StackPanel Orientation="Vertical"
                          Margin="{StaticResource FolderButtonPopupMargin}">
                <Button Style="{StaticResource FolderButton}">
                  <Image Source="{Binding Image}" />
                </Button>
                <TextBlock Text="{Binding Label}"
                           Style="{StaticResource FolderButtonLabel}" />
              </StackPanel>
            </DataTemplate>
          </Setter.Value>
        </Setter>
      </Style>

      <local:MainItemTemplateSelector x:Key="MainItemTemplateSelector" />
      <local:PageItemTemplateSelector x:Key="PageItemTemplateSelector" />
      <DataTemplate x:Key="PageAppTemplate"
                    DataType="{x:Type local:AppViewModel}">
        <StackPanel Orientation="Vertical"
                    Margin="{StaticResource ButtonMargin}">
          <Button Style="{StaticResource Application}">
            <Image Source="{Binding Image}" />
          </Button>
          <TextBlock Text="{Binding Label}"
                     Style="{StaticResource ButtonLabel}" />
        </StackPanel>
      </DataTemplate>
      <DataTemplate x:Key="PageFolderTemplate"
                    DataType="{x:Type local:FolderViewModel}">
        <Grid>
          <blur:BlurryUserControl Name="blurryBackground"
                                  BlurContainer="{Binding BlurContainer}"
                                  Style="{StaticResource BlurryFolder}" />
          <StackPanel Orientation="Vertical"
                      Margin="{StaticResource ButtonMargin}">
            <Button Style="{StaticResource PageFolder}">
              <ItemsControl Style="{StaticResource FolderPanel}"
                            ItemsSource="{Binding Children}">
              </ItemsControl>
            </Button>
            <TextBlock Text="{Binding Label}"
                       Style="{StaticResource ButtonLabel}" />
          </StackPanel>
        </Grid>
      </DataTemplate>
      <DataTemplate x:Key="MainAppTemplate"
                    DataType="{x:Type local:AppViewModel}">
        <Button Style="{StaticResource Application}"
                Margin="{StaticResource MainButtonMargin}"
                VerticalAlignment="Center">
          <Image Source="{Binding Image}" />
        </Button>
      </DataTemplate>
      <DataTemplate x:Key="MainFolderTemplate"
                    DataType="{x:Type local:MainFolderViewModel}">
        <Button Style="{StaticResource MainFolder}"
                Margin="{StaticResource MainButtonMargin}"
                VerticalAlignment="Center">
          <ItemsControl Style="{StaticResource FolderPanel}"
                        ItemsSource="{Binding Children}">
          </ItemsControl>
        </Button>
      </DataTemplate>


      <Style TargetType="local:ButtonPanel">
        <Setter Property="Width"
                Value="{Binding ActualWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
        <Setter Property="Height"
                Value="{Binding ActualHeight, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Canvas}}" />
      </Style>
    </ResourceDictionary>
  </Application.Resources>
</Application>
